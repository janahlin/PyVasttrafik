# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik  # noqa: E501

    The version of the OpenAPI document: v4
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from pyvasttrafik.api.configuration import Configuration


class VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'details_reference': 'str',
        'line': 'VTApiPlaneraResaWebV4ModelsPositionsLineDetailsApiModel',
        'notes': 'list[VTApiPlaneraResaCoreModelsNote]',
        'name': 'str',
        'direction': 'str',
        'latitude': 'float',
        'longitude': 'float'
    }

    attribute_map = {
        'details_reference': 'detailsReference',
        'line': 'line',
        'notes': 'notes',
        'name': 'name',
        'direction': 'direction',
        'latitude': 'latitude',
        'longitude': 'longitude'
    }

    def __init__(self, details_reference=None, line=None, notes=None, name=None, direction=None, latitude=None, longitude=None, local_vars_configuration=None):  # noqa: E501
        """VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._details_reference = None
        self._line = None
        self._notes = None
        self._name = None
        self._direction = None
        self._latitude = None
        self._longitude = None
        self.discriminator = None

        self.details_reference = details_reference
        if line is not None:
            self.line = line
        self.notes = notes
        self.name = name
        self.direction = direction
        self.latitude = latitude
        self.longitude = longitude

    @property
    def details_reference(self):
        """Gets the details_reference of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501

        Journey reference  # noqa: E501

        :return: The details_reference of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: str
        """
        return self._details_reference

    @details_reference.setter
    def details_reference(self, details_reference):
        """Sets the details_reference of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.

        Journey reference  # noqa: E501

        :param details_reference: The details_reference of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type details_reference: str
        """

        self._details_reference = details_reference

    @property
    def line(self):
        """Gets the line of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501


        :return: The line of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsPositionsLineDetailsApiModel
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.


        :param line: The line of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type line: VTApiPlaneraResaWebV4ModelsPositionsLineDetailsApiModel
        """

        self._line = line

    @property
    def notes(self):
        """Gets the notes of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501

        Journey notes  # noqa: E501

        :return: The notes of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: list[VTApiPlaneraResaCoreModelsNote]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.

        Journey notes  # noqa: E501

        :param notes: The notes of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type notes: list[VTApiPlaneraResaCoreModelsNote]
        """

        self._notes = notes

    @property
    def name(self):
        """Gets the name of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501

        Journey name  # noqa: E501

        :return: The name of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.

        Journey name  # noqa: E501

        :param name: The name of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def direction(self):
        """Gets the direction of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501

        Journey direction  # noqa: E501

        :return: The direction of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.

        Journey direction  # noqa: E501

        :param direction: The direction of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type direction: str
        """

        self._direction = direction

    @property
    def latitude(self):
        """Gets the latitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501

        Current latitude of journey  # noqa: E501

        :return: The latitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.

        Current latitude of journey  # noqa: E501

        :param latitude: The latitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501

        Current longitude of journey  # noqa: E501

        :return: The longitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.

        Current longitude of journey  # noqa: E501

        :param longitude: The longitude of this VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel.  # noqa: E501
        :type longitude: float
        """

        self._longitude = longitude

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsPositionsJourneyPositionApiModel):
            return True

        return self.to_dict() != other.to_dict()
