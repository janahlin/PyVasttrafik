# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik  # noqa: E501

    The version of the OpenAPI document: v4
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from pyvasttrafik.api.configuration import Configuration


class VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'gid': 'str',
        'direction': 'str',
        'line': 'VTApiPlaneraResaWebV4ModelsJourneyDetailsLineDetailsApiModel',
        'service_journey_coordinates': 'list[VTApiPlaneraResaWebV4ModelsCoordinateApiModel]',
        'calls_on_service_journey': 'list[VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel]'
    }

    attribute_map = {
        'gid': 'gid',
        'direction': 'direction',
        'line': 'line',
        'service_journey_coordinates': 'serviceJourneyCoordinates',
        'calls_on_service_journey': 'callsOnServiceJourney'
    }

    def __init__(self, gid=None, direction=None, line=None, service_journey_coordinates=None, calls_on_service_journey=None, local_vars_configuration=None):  # noqa: E501
        """VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._gid = None
        self._direction = None
        self._line = None
        self._service_journey_coordinates = None
        self._calls_on_service_journey = None
        self.discriminator = None

        self.gid = gid
        self.direction = direction
        if line is not None:
            self.line = line
        self.service_journey_coordinates = service_journey_coordinates
        self.calls_on_service_journey = calls_on_service_journey

    @property
    def gid(self):
        """Gets the gid of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501

        16-digit Västtrafik service journey gid that the trip leg is a part of.  # noqa: E501

        :return: The gid of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :rtype: str
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.

        16-digit Västtrafik service journey gid that the trip leg is a part of.  # noqa: E501

        :param gid: The gid of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :type gid: str
        """

        self._gid = gid

    @property
    def direction(self):
        """Gets the direction of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501

        A description of the direction.  # noqa: E501

        :return: The direction of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.

        A description of the direction.  # noqa: E501

        :param direction: The direction of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :type direction: str
        """

        self._direction = direction

    @property
    def line(self):
        """Gets the line of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501


        :return: The line of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsJourneyDetailsLineDetailsApiModel
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.


        :param line: The line of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :type line: VTApiPlaneraResaWebV4ModelsJourneyDetailsLineDetailsApiModel
        """

        self._line = line

    @property
    def service_journey_coordinates(self):
        """Gets the service_journey_coordinates of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501

        The coordinates on the service journey.  # noqa: E501

        :return: The service_journey_coordinates of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :rtype: list[VTApiPlaneraResaWebV4ModelsCoordinateApiModel]
        """
        return self._service_journey_coordinates

    @service_journey_coordinates.setter
    def service_journey_coordinates(self, service_journey_coordinates):
        """Sets the service_journey_coordinates of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.

        The coordinates on the service journey.  # noqa: E501

        :param service_journey_coordinates: The service_journey_coordinates of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :type service_journey_coordinates: list[VTApiPlaneraResaWebV4ModelsCoordinateApiModel]
        """

        self._service_journey_coordinates = service_journey_coordinates

    @property
    def calls_on_service_journey(self):
        """Gets the calls_on_service_journey of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501

        All calls on the service journey.  # noqa: E501

        :return: The calls_on_service_journey of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :rtype: list[VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel]
        """
        return self._calls_on_service_journey

    @calls_on_service_journey.setter
    def calls_on_service_journey(self, calls_on_service_journey):
        """Sets the calls_on_service_journey of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.

        All calls on the service journey.  # noqa: E501

        :param calls_on_service_journey: The calls_on_service_journey of this VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel.  # noqa: E501
        :type calls_on_service_journey: list[VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel]
        """

        self._calls_on_service_journey = calls_on_service_journey

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsJourneyDetailsServiceJourneyApiModel):
            return True

        return self.to_dict() != other.to_dict()
