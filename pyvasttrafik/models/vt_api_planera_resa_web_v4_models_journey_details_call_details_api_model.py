# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik  # noqa: E501

    The version of the OpenAPI document: v4
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from pyvasttrafik.api.configuration import Configuration


class VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'stop_point': 'VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel',
        'planned_arrival_time': 'str',
        'planned_departure_time': 'str',
        'estimated_arrival_time': 'str',
        'estimated_departure_time': 'str',
        'estimated_otherwise_planned_arrival_time': 'str',
        'estimated_otherwise_planned_departure_time': 'str',
        'planned_platform': 'str',
        'estimated_platform': 'str',
        'latitude': 'float',
        'longitude': 'float',
        'index': 'str',
        'is_on_trip_leg': 'bool',
        'is_trip_leg_start': 'bool',
        'is_trip_leg_stop': 'bool',
        'tariff_zones': 'list[VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel]',
        'occupancy': 'VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel',
        'is_cancelled': 'bool',
        'is_departure_cancelled': 'bool',
        'is_arrival_cancelled': 'bool'
    }

    attribute_map = {
        'stop_point': 'stopPoint',
        'planned_arrival_time': 'plannedArrivalTime',
        'planned_departure_time': 'plannedDepartureTime',
        'estimated_arrival_time': 'estimatedArrivalTime',
        'estimated_departure_time': 'estimatedDepartureTime',
        'estimated_otherwise_planned_arrival_time': 'estimatedOtherwisePlannedArrivalTime',
        'estimated_otherwise_planned_departure_time': 'estimatedOtherwisePlannedDepartureTime',
        'planned_platform': 'plannedPlatform',
        'estimated_platform': 'estimatedPlatform',
        'latitude': 'latitude',
        'longitude': 'longitude',
        'index': 'index',
        'is_on_trip_leg': 'isOnTripLeg',
        'is_trip_leg_start': 'isTripLegStart',
        'is_trip_leg_stop': 'isTripLegStop',
        'tariff_zones': 'tariffZones',
        'occupancy': 'occupancy',
        'is_cancelled': 'isCancelled',
        'is_departure_cancelled': 'isDepartureCancelled',
        'is_arrival_cancelled': 'isArrivalCancelled'
    }

    def __init__(self, stop_point=None, planned_arrival_time=None, planned_departure_time=None, estimated_arrival_time=None, estimated_departure_time=None, estimated_otherwise_planned_arrival_time=None, estimated_otherwise_planned_departure_time=None, planned_platform=None, estimated_platform=None, latitude=None, longitude=None, index=None, is_on_trip_leg=None, is_trip_leg_start=None, is_trip_leg_stop=None, tariff_zones=None, occupancy=None, is_cancelled=None, is_departure_cancelled=None, is_arrival_cancelled=None, local_vars_configuration=None):  # noqa: E501
        """VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._stop_point = None
        self._planned_arrival_time = None
        self._planned_departure_time = None
        self._estimated_arrival_time = None
        self._estimated_departure_time = None
        self._estimated_otherwise_planned_arrival_time = None
        self._estimated_otherwise_planned_departure_time = None
        self._planned_platform = None
        self._estimated_platform = None
        self._latitude = None
        self._longitude = None
        self._index = None
        self._is_on_trip_leg = None
        self._is_trip_leg_start = None
        self._is_trip_leg_stop = None
        self._tariff_zones = None
        self._occupancy = None
        self._is_cancelled = None
        self._is_departure_cancelled = None
        self._is_arrival_cancelled = None
        self.discriminator = None

        self.stop_point = stop_point
        self.planned_arrival_time = planned_arrival_time
        self.planned_departure_time = planned_departure_time
        self.estimated_arrival_time = estimated_arrival_time
        self.estimated_departure_time = estimated_departure_time
        self.estimated_otherwise_planned_arrival_time = estimated_otherwise_planned_arrival_time
        self.estimated_otherwise_planned_departure_time = estimated_otherwise_planned_departure_time
        self.planned_platform = planned_platform
        self.estimated_platform = estimated_platform
        self.latitude = latitude
        self.longitude = longitude
        self.index = index
        self.is_on_trip_leg = is_on_trip_leg
        self.is_trip_leg_start = is_trip_leg_start
        self.is_trip_leg_stop = is_trip_leg_stop
        self.tariff_zones = tariff_zones
        if occupancy is not None:
            self.occupancy = occupancy
        if is_cancelled is not None:
            self.is_cancelled = is_cancelled
        self.is_departure_cancelled = is_departure_cancelled
        self.is_arrival_cancelled = is_arrival_cancelled

    @property
    def stop_point(self):
        """Gets the stop_point of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501


        :return: The stop_point of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel
        """
        return self._stop_point

    @stop_point.setter
    def stop_point(self, stop_point):
        """Sets the stop_point of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.


        :param stop_point: The stop_point of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type stop_point: VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel
        """
        if self.local_vars_configuration.client_side_validation and stop_point is None:  # noqa: E501
            raise ValueError("Invalid value for `stop_point`, must not be `None`")  # noqa: E501

        self._stop_point = stop_point

    @property
    def planned_arrival_time(self):
        """Gets the planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The planned arrival time for the call in RFC 3339 format.  # noqa: E501

        :return: The planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._planned_arrival_time

    @planned_arrival_time.setter
    def planned_arrival_time(self, planned_arrival_time):
        """Sets the planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The planned arrival time for the call in RFC 3339 format.  # noqa: E501

        :param planned_arrival_time: The planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type planned_arrival_time: str
        """

        self._planned_arrival_time = planned_arrival_time

    @property
    def planned_departure_time(self):
        """Gets the planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The planned departure time for the call in RFC 3339 format.  # noqa: E501

        :return: The planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._planned_departure_time

    @planned_departure_time.setter
    def planned_departure_time(self, planned_departure_time):
        """Sets the planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The planned departure time for the call in RFC 3339 format.  # noqa: E501

        :param planned_departure_time: The planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type planned_departure_time: str
        """

        self._planned_departure_time = planned_departure_time

    @property
    def estimated_arrival_time(self):
        """Gets the estimated_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The estimated arrival time for the call in RFC 3339 format.  # noqa: E501

        :return: The estimated_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._estimated_arrival_time

    @estimated_arrival_time.setter
    def estimated_arrival_time(self, estimated_arrival_time):
        """Sets the estimated_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The estimated arrival time for the call in RFC 3339 format.  # noqa: E501

        :param estimated_arrival_time: The estimated_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type estimated_arrival_time: str
        """

        self._estimated_arrival_time = estimated_arrival_time

    @property
    def estimated_departure_time(self):
        """Gets the estimated_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The estimated departure time for the call in RFC 3339 format.  # noqa: E501

        :return: The estimated_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._estimated_departure_time

    @estimated_departure_time.setter
    def estimated_departure_time(self, estimated_departure_time):
        """Sets the estimated_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The estimated departure time for the call in RFC 3339 format.  # noqa: E501

        :param estimated_departure_time: The estimated_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type estimated_departure_time: str
        """

        self._estimated_departure_time = estimated_departure_time

    @property
    def estimated_otherwise_planned_arrival_time(self):
        """Gets the estimated_otherwise_planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The best known time of the call in RFC 3339 format. Is EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.  # noqa: E501

        :return: The estimated_otherwise_planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._estimated_otherwise_planned_arrival_time

    @estimated_otherwise_planned_arrival_time.setter
    def estimated_otherwise_planned_arrival_time(self, estimated_otherwise_planned_arrival_time):
        """Sets the estimated_otherwise_planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The best known time of the call in RFC 3339 format. Is EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.  # noqa: E501

        :param estimated_otherwise_planned_arrival_time: The estimated_otherwise_planned_arrival_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type estimated_otherwise_planned_arrival_time: str
        """

        self._estimated_otherwise_planned_arrival_time = estimated_otherwise_planned_arrival_time

    @property
    def estimated_otherwise_planned_departure_time(self):
        """Gets the estimated_otherwise_planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The best known time of the call in RFC 3339 format. Is EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.  # noqa: E501

        :return: The estimated_otherwise_planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._estimated_otherwise_planned_departure_time

    @estimated_otherwise_planned_departure_time.setter
    def estimated_otherwise_planned_departure_time(self, estimated_otherwise_planned_departure_time):
        """Sets the estimated_otherwise_planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The best known time of the call in RFC 3339 format. Is EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.  # noqa: E501

        :param estimated_otherwise_planned_departure_time: The estimated_otherwise_planned_departure_time of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type estimated_otherwise_planned_departure_time: str
        """

        self._estimated_otherwise_planned_departure_time = estimated_otherwise_planned_departure_time

    @property
    def planned_platform(self):
        """Gets the planned_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The planned platform of the call.  # noqa: E501

        :return: The planned_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._planned_platform

    @planned_platform.setter
    def planned_platform(self, planned_platform):
        """Sets the planned_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The planned platform of the call.  # noqa: E501

        :param planned_platform: The planned_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type planned_platform: str
        """

        self._planned_platform = planned_platform

    @property
    def estimated_platform(self):
        """Gets the estimated_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The estimated platform of the call.  # noqa: E501

        :return: The estimated_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._estimated_platform

    @estimated_platform.setter
    def estimated_platform(self, estimated_platform):
        """Sets the estimated_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The estimated platform of the call.  # noqa: E501

        :param estimated_platform: The estimated_platform of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type estimated_platform: str
        """

        self._estimated_platform = estimated_platform

    @property
    def latitude(self):
        """Gets the latitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The latitude of the stop point of the call.  # noqa: E501

        :return: The latitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The latitude of the stop point of the call.  # noqa: E501

        :param latitude: The latitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The longitude of the stop point of the call.  # noqa: E501

        :return: The longitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The longitude of the stop point of the call.  # noqa: E501

        :param longitude: The longitude of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def index(self):
        """Gets the index of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The index of the stop point of the call.  # noqa: E501

        :return: The index of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: str
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The index of the stop point of the call.  # noqa: E501

        :param index: The index of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type index: str
        """

        self._index = index

    @property
    def is_on_trip_leg(self):
        """Gets the is_on_trip_leg of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The call is on the trip leg.  # noqa: E501

        :return: The is_on_trip_leg of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_on_trip_leg

    @is_on_trip_leg.setter
    def is_on_trip_leg(self, is_on_trip_leg):
        """Sets the is_on_trip_leg of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The call is on the trip leg.  # noqa: E501

        :param is_on_trip_leg: The is_on_trip_leg of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type is_on_trip_leg: bool
        """

        self._is_on_trip_leg = is_on_trip_leg

    @property
    def is_trip_leg_start(self):
        """Gets the is_trip_leg_start of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The call is the first on the trip leg.  # noqa: E501

        :return: The is_trip_leg_start of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_trip_leg_start

    @is_trip_leg_start.setter
    def is_trip_leg_start(self, is_trip_leg_start):
        """Sets the is_trip_leg_start of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The call is the first on the trip leg.  # noqa: E501

        :param is_trip_leg_start: The is_trip_leg_start of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type is_trip_leg_start: bool
        """

        self._is_trip_leg_start = is_trip_leg_start

    @property
    def is_trip_leg_stop(self):
        """Gets the is_trip_leg_stop of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The call is the last on the trip leg.  # noqa: E501

        :return: The is_trip_leg_stop of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_trip_leg_stop

    @is_trip_leg_stop.setter
    def is_trip_leg_stop(self, is_trip_leg_stop):
        """Sets the is_trip_leg_stop of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The call is the last on the trip leg.  # noqa: E501

        :param is_trip_leg_stop: The is_trip_leg_stop of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type is_trip_leg_stop: bool
        """

        self._is_trip_leg_stop = is_trip_leg_stop

    @property
    def tariff_zones(self):
        """Gets the tariff_zones of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        The primary tariff zone of the call. A call can be related to a stop area with multiple tariff zones  and this is the zone that for example should be displayed in overviews etc.  # noqa: E501

        :return: The tariff_zones of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: list[VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel]
        """
        return self._tariff_zones

    @tariff_zones.setter
    def tariff_zones(self, tariff_zones):
        """Sets the tariff_zones of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        The primary tariff zone of the call. A call can be related to a stop area with multiple tariff zones  and this is the zone that for example should be displayed in overviews etc.  # noqa: E501

        :param tariff_zones: The tariff_zones of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type tariff_zones: list[VTApiPlaneraResaWebV4ModelsJourneyDetailsTariffZoneApiModel]
        """

        self._tariff_zones = tariff_zones

    @property
    def occupancy(self):
        """Gets the occupancy of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501


        :return: The occupancy of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel
        """
        return self._occupancy

    @occupancy.setter
    def occupancy(self, occupancy):
        """Sets the occupancy of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.


        :param occupancy: The occupancy of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type occupancy: VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel
        """

        self._occupancy = occupancy

    @property
    def is_cancelled(self):
        """Gets the is_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        Flag indicating if the call is cancelled.  # noqa: E501

        :return: The is_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_cancelled

    @is_cancelled.setter
    def is_cancelled(self, is_cancelled):
        """Sets the is_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        Flag indicating if the call is cancelled.  # noqa: E501

        :param is_cancelled: The is_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type is_cancelled: bool
        """

        self._is_cancelled = is_cancelled

    @property
    def is_departure_cancelled(self):
        """Gets the is_departure_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        Flag indicating if the departure is cancelled.  # noqa: E501

        :return: The is_departure_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_departure_cancelled

    @is_departure_cancelled.setter
    def is_departure_cancelled(self, is_departure_cancelled):
        """Sets the is_departure_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        Flag indicating if the departure is cancelled.  # noqa: E501

        :param is_departure_cancelled: The is_departure_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type is_departure_cancelled: bool
        """

        self._is_departure_cancelled = is_departure_cancelled

    @property
    def is_arrival_cancelled(self):
        """Gets the is_arrival_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501

        Flag indicating if the arrival is cancelled.  # noqa: E501

        :return: The is_arrival_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_arrival_cancelled

    @is_arrival_cancelled.setter
    def is_arrival_cancelled(self, is_arrival_cancelled):
        """Sets the is_arrival_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.

        Flag indicating if the arrival is cancelled.  # noqa: E501

        :param is_arrival_cancelled: The is_arrival_cancelled of this VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel.  # noqa: E501
        :type is_arrival_cancelled: bool
        """

        self._is_arrival_cancelled = is_arrival_cancelled

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsJourneyDetailsCallDetailsApiModel):
            return True

        return self.to_dict() != other.to_dict()
