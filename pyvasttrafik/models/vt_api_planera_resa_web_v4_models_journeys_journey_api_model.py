# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik  # noqa: E501

    The version of the OpenAPI document: v4
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from pyvasttrafik.api.configuration import Configuration


class VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'reconstruction_reference': 'str',
        'details_reference': 'str',
        'departure_access_link': 'VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel',
        'trip_legs': 'list[VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel]',
        'connection_links': 'list[VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel]',
        'arrival_access_link': 'VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel',
        'destination_link': 'VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel',
        'is_departed': 'bool',
        'occupancy': 'VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel'
    }

    attribute_map = {
        'reconstruction_reference': 'reconstructionReference',
        'details_reference': 'detailsReference',
        'departure_access_link': 'departureAccessLink',
        'trip_legs': 'tripLegs',
        'connection_links': 'connectionLinks',
        'arrival_access_link': 'arrivalAccessLink',
        'destination_link': 'destinationLink',
        'is_departed': 'isDeparted',
        'occupancy': 'occupancy'
    }

    def __init__(self, reconstruction_reference=None, details_reference=None, departure_access_link=None, trip_legs=None, connection_links=None, arrival_access_link=None, destination_link=None, is_departed=None, occupancy=None, local_vars_configuration=None):  # noqa: E501
        """VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._reconstruction_reference = None
        self._details_reference = None
        self._departure_access_link = None
        self._trip_legs = None
        self._connection_links = None
        self._arrival_access_link = None
        self._destination_link = None
        self._is_departed = None
        self._occupancy = None
        self.discriminator = None

        self.reconstruction_reference = reconstruction_reference
        self.details_reference = details_reference
        if departure_access_link is not None:
            self.departure_access_link = departure_access_link
        self.trip_legs = trip_legs
        self.connection_links = connection_links
        if arrival_access_link is not None:
            self.arrival_access_link = arrival_access_link
        if destination_link is not None:
            self.destination_link = destination_link
        self.is_departed = is_departed
        if occupancy is not None:
            self.occupancy = occupancy

    @property
    def reconstruction_reference(self):
        """Gets the reconstruction_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501

        A reference that can be used to reconstruct this journey at a later time.  # noqa: E501

        :return: The reconstruction_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: str
        """
        return self._reconstruction_reference

    @reconstruction_reference.setter
    def reconstruction_reference(self, reconstruction_reference):
        """Sets the reconstruction_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.

        A reference that can be used to reconstruct this journey at a later time.  # noqa: E501

        :param reconstruction_reference: The reconstruction_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type reconstruction_reference: str
        """

        self._reconstruction_reference = reconstruction_reference

    @property
    def details_reference(self):
        """Gets the details_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501

        A reference that should be used when getting detailed information about the journey.  # noqa: E501

        :return: The details_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: str
        """
        return self._details_reference

    @details_reference.setter
    def details_reference(self, details_reference):
        """Sets the details_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.

        A reference that should be used when getting detailed information about the journey.  # noqa: E501

        :param details_reference: The details_reference of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type details_reference: str
        """

        self._details_reference = details_reference

    @property
    def departure_access_link(self):
        """Gets the departure_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501


        :return: The departure_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel
        """
        return self._departure_access_link

    @departure_access_link.setter
    def departure_access_link(self, departure_access_link):
        """Sets the departure_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.


        :param departure_access_link: The departure_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type departure_access_link: VTApiPlaneraResaWebV4ModelsJourneysDepartureAccessLinkApiModel
        """

        self._departure_access_link = departure_access_link

    @property
    def trip_legs(self):
        """Gets the trip_legs of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501

        A list of trip legs on a journey, when applicable. A journey has either one or more trip legs or one  destination link.  # noqa: E501

        :return: The trip_legs of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: list[VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel]
        """
        return self._trip_legs

    @trip_legs.setter
    def trip_legs(self, trip_legs):
        """Sets the trip_legs of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.

        A list of trip legs on a journey, when applicable. A journey has either one or more trip legs or one  destination link.  # noqa: E501

        :param trip_legs: The trip_legs of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type trip_legs: list[VTApiPlaneraResaWebV4ModelsJourneysTripLegApiModel]
        """

        self._trip_legs = trip_legs

    @property
    def connection_links(self):
        """Gets the connection_links of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501

        A list of ConnectionLinks between TripLegs, when applicable. The internal order of TripLegs and ConnectionLinks is defined by Index-property on the objects.  # noqa: E501

        :return: The connection_links of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: list[VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel]
        """
        return self._connection_links

    @connection_links.setter
    def connection_links(self, connection_links):
        """Sets the connection_links of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.

        A list of ConnectionLinks between TripLegs, when applicable. The internal order of TripLegs and ConnectionLinks is defined by Index-property on the objects.  # noqa: E501

        :param connection_links: The connection_links of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type connection_links: list[VTApiPlaneraResaWebV4ModelsJourneysConnectionLinkApiModel]
        """

        self._connection_links = connection_links

    @property
    def arrival_access_link(self):
        """Gets the arrival_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501


        :return: The arrival_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
        """
        return self._arrival_access_link

    @arrival_access_link.setter
    def arrival_access_link(self, arrival_access_link):
        """Sets the arrival_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.


        :param arrival_access_link: The arrival_access_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type arrival_access_link: VTApiPlaneraResaWebV4ModelsJourneysArrivalAccessLinkApiModel
        """

        self._arrival_access_link = arrival_access_link

    @property
    def destination_link(self):
        """Gets the destination_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501


        :return: The destination_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel
        """
        return self._destination_link

    @destination_link.setter
    def destination_link(self, destination_link):
        """Sets the destination_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.


        :param destination_link: The destination_link of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type destination_link: VTApiPlaneraResaWebV4ModelsJourneysDestinationLinkApiModel
        """

        self._destination_link = destination_link

    @property
    def is_departed(self):
        """Gets the is_departed of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501

        Flag indicating if the first trip leg of the journey is departed.  # noqa: E501

        :return: The is_departed of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_departed

    @is_departed.setter
    def is_departed(self, is_departed):
        """Sets the is_departed of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.

        Flag indicating if the first trip leg of the journey is departed.  # noqa: E501

        :param is_departed: The is_departed of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type is_departed: bool
        """

        self._is_departed = is_departed

    @property
    def occupancy(self):
        """Gets the occupancy of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501


        :return: The occupancy of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :rtype: VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel
        """
        return self._occupancy

    @occupancy.setter
    def occupancy(self, occupancy):
        """Sets the occupancy of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.


        :param occupancy: The occupancy of this VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.  # noqa: E501
        :type occupancy: VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel
        """

        self._occupancy = occupancy

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel):
            return True

        return self.to_dict() != other.to_dict()
